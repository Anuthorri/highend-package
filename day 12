program:
def find_missing_number(nums):
    n = len(nums) + 1  
    expected_sum = (n * (n + 1)) // 2  
    actual_sum = sum(nums) 
    missing_number = expected_sum - actual_sum
    return missing_number
arr = [1, 2, 3, 5, 6]
missing_number = find_missing_number(arr)
print("Missing number:", missing_number)
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
a=[-3,8,7,2,-5,13,18,9,6]
target=20
for i in range(len(a)):
    for j in range(len(a)):
        if a[i]+a[j]==20:
            print(a[i],a[j])
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
def query_subarray_sum(arr,queries):
    n=len(arr)
    ps=[0 for i in range(n)]
    for i in range(n):
        if i==0:
            ps[i]=arr[i]
        else:
            ps[i]=ps[i-1]+arr[i]
    for query in queries:
        i=query[0]
        j=query[1]
        if i==0:
            print(ps[j],end=" ")
        else:
            print(ps[j]-ps[i-1],end=" ")
query_subarray_sum([
    2,4,5,1,6,3,7,8
],
     [
         [0,4],[1,3],[4,6]
      ]
 )
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
def max_sum_subarray(arr, k):
    if k <= 0 or k > len(arr):
        return None  

    max_sum = float('-inf')
    current_sum = sum(arr[:k])  
    for i in range(k, len(arr)): 
        current_sum += arr[i] - arr[i - k]
        max_sum = max(max_sum, current_sum)

    return max_sum
arr = [-3, 8, -5, 2, 7, 9, -11, 18]
k = 3
result = max_sum_subarray(arr, k)
print("The maximum sum of a subarray of length", k, "is:", result)
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
def kadanes(arr):
    _sum=float("-inf")
    cs=arr[0]
    n=len(arr)
    for i in range(1,n):
        if cs<0:
            cs=0
        cs=cs+arr[i]
        if arr[i]<0:
            _sum=max(_sum,cs+arr[i])
    return max(_sum,cs)
print(kadanes([-1,-1,3,-4,-6,18,65,110]))
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------

